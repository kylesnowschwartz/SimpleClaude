# SimpleClaude Mode Detection Patterns
# Natural language patterns for detecting user intent
# @include: ../simpleclaude/mode-detection.yml

## Mode_Patterns
mode_patterns:
  watch:
    triggers:
      [
        "watch",
        "monitor",
        "observe",
        "track",
        "continuous",
        "real-time",
        "live",
      ]
    phrases:
      [
        "watch for changes",
        "monitor the files",
        "keep an eye on",
        "track updates",
      ]

  interactive:
    triggers:
      [
        "interactive",
        "step-by-step",
        "guided",
        "walkthrough",
        "confirm",
        "approve",
      ]
    phrases: ["guide me through", "step by step", "let me review", "ask before"]

  planning:
    triggers:
      [
        "plan",
        "planning",
        "strategy",
        "approach",
        "design",
        "blueprint",
        "roadmap",
      ]
    phrases:
      ["show me the plan", "plan this out", "design first", "outline the steps"]

  tdd:
    triggers: ["tdd", "test-driven", "test-first", "red-green", "failing test"]
    phrases:
      ["test driven development", "write the test first", "red green refactor"]

  magic:
    triggers:
      ["ui", "component", "frontend", "interface", "button", "form", "modal"]
    phrases:
      [
        "create a UI",
        "build the interface",
        "design a form",
        "frontend component",
      ]

  c7:
    triggers:
      ["library", "framework", "package", "documentation", "api", "reference"]
    phrases:
      ["how to use", "documentation for", "api reference", "library examples"]

  strict:
    triggers:
      ["strict", "rigorous", "thorough", "comprehensive", "validate", "verify"]
    phrases:
      [
        "be extra careful",
        "strict validation",
        "comprehensive testing",
        "production quality",
      ]

  safe:
    triggers: ["safe", "careful", "cautious", "secure", "backup", "rollback"]
    phrases:
      ["be careful with", "safe approach", "don't break", "cautious changes"]

## Compatible_Modes
compatible_modes:
  - [watch, interactive]
  - [tdd, strict]
  - [planning, safe]
  - [c7, magic]
  - [strict, safe]

## Context_Hints
context_hints:
  test_files:
    patterns: [".test.", ".spec.", "test/", "spec/"]
    suggest: [tdd, strict]

  ui_files:
    patterns: [".jsx", ".tsx", ".vue", ".svelte"]
    suggest: [magic]

  config_files:
    patterns: ["config.", "settings.", ".env"]
    suggest: [safe, strict]

  production:
    patterns: ["prod", "production"]
    suggest: [safe, strict, interactive]

  errors_present:
    suggest: [safe, interactive, strict]

## Detection_Guidelines
detection_guidelines:
  - Look for mode keywords in natural language
  - Check for common phrases that indicate intent
  - Consider file context when suggesting modes
  - Safety modes take precedence when errors present
  - Allow compatible modes to work together
